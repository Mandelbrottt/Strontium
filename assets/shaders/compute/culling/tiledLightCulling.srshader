#type compute
#version 440
/*
 * A compute shader to cull lights.
 */

#define GROUP_SIZE 8

layout(local_size_x = GROUP_SIZE, local_size_y = GROUP_SIZE) in;

struct TileData
{
  // World space frustum normals, signed distance is packed in the w component.
  vec4 frustumPlanes[6];
  // World space tile AABB, only xyz are used.
  vec4 aabbCenter;
  vec4 aabbExtents;
};

struct PointLight
{
  vec4 u_lPositionRadius; // Position (x, y, z), radius (w).
  vec4 u_lColourIntensity; // Colour (x, y, z) and intensity (w).
};

// Camera specific uniforms.
layout(std140, binding = 0) uniform CameraBlock
{
  mat4 u_viewMatrix;
  mat4 u_projMatrix;
  mat4 u_invViewProjMatrix;
  vec3 u_camPosition;
  vec4 u_nearFar; // Near plane (x), far plane (y). z and w are unused.
};

layout(std140, binding = 1) readonly buffer AABBandFrustum
{
  TileData frustumsAABBs[];
};

layout(std140, binding = 2) readonly buffer PointLights
{
  PointLight pLights[];
};

void main()
{

}
